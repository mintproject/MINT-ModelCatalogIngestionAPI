openapi: 3.0.1
info:
  description: This is the API of the  Software Description Ontology at [https://mintproject.github.io/Mint-ModelCatalog-Ontology/release/1.3.0/index-en.html](https://w3id.org/okn/o/sdm)
  title: Model Catalog
  version: v1.4.0
externalDocs:
  description: Model Catalog
  url: https://w3id.org/okn/o/sdm
servers:
- url: https://api.models.mint.isi.edu/v1.4.0
- url: https://dev.api.models.mint.isi.edu/v1.4.0
- url: http://localhost:8080/v1.4.0
paths:
  /user/login:
    get:
      description: Login the user
      operationId: user_login_get
      parameters:
      - description: The user name for login
        in: query
        name: username
        required: true
        schema:
          type: string
      - description: The password for login in clear text
        in: query
        name: password
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                type: string
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                format: int32
                type: integer
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                format: date-time
                type: string
        400:
          content:
            application/json:
              schema:
                type: string
          description: unsuccessful operation
      x-openapi-router-controller: openapi_server.controllers.user_controller
  /causaldiagrams:
    get:
      description: Gets a list of all CausalDiagram entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CausalDiagram'
                type: array
          description: Successful response - returns an array of CausalDiagram entities.
      summary: List all CausalDiagram entities
      tags:
      - CausalDiagram
    post:
      description: Create a new instance of a CausalDiagram
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CausalDiagram'
        description: A new CausalDiagramto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a CausalDiagram
      tags:
      - CausalDiagram
  /causaldiagrams/{id}:
    delete:
      description: Delete an existing CausalDiagram
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a CausalDiagram
      tags:
      - CausalDiagram
    get:
      description: Gets the details of a single instance of a CausalDiagram
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Gets the details of a single instance of  CausalDiagram
      summary: Get a CausalDiagram
      tags:
      - CausalDiagram
    put:
      description: Updates an existing CausalDiagram
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CausalDiagram'
        description: An old CausalDiagramto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a CausalDiagram
      tags:
      - CausalDiagram
  /empiricalmodels:
    get:
      description: Gets a list of all EmpiricalModel entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmpiricalModel'
                type: array
          description: Successful response - returns an array of EmpiricalModel entities.
      summary: List all EmpiricalModel entities
      tags:
      - EmpiricalModel
    post:
      description: Create a new instance of a EmpiricalModel
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpiricalModel'
        description: A new EmpiricalModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a EmpiricalModel
      tags:
      - EmpiricalModel
  /empiricalmodels/{id}:
    delete:
      description: Delete an existing EmpiricalModel
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a EmpiricalModel
      tags:
      - EmpiricalModel
    get:
      description: Gets the details of a single instance of a EmpiricalModel
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Gets the details of a single instance of  EmpiricalModel
      summary: Get a EmpiricalModel
      tags:
      - EmpiricalModel
    put:
      description: Updates an existing EmpiricalModel
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpiricalModel'
        description: An old EmpiricalModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a EmpiricalModel
      tags:
      - EmpiricalModel
  /emulators:
    get:
      description: Gets a list of all Emulator entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Emulator'
                type: array
          description: Successful response - returns an array of Emulator entities.
      summary: List all Emulator entities
      tags:
      - Emulator
    post:
      description: Create a new instance of a Emulator
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emulator'
        description: A new Emulatorto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Emulator
      tags:
      - Emulator
  /emulators/{id}:
    delete:
      description: Delete an existing Emulator
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Emulator
      tags:
      - Emulator
    get:
      description: Gets the details of a single instance of a Emulator
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Gets the details of a single instance of  Emulator
      summary: Get a Emulator
      tags:
      - Emulator
    put:
      description: Updates an existing Emulator
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emulator'
        description: An old Emulatorto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Emulator
      tags:
      - Emulator
  /equations:
    get:
      description: Gets a list of all Equation entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Equation'
                type: array
          description: Successful response - returns an array of Equation entities.
      summary: List all Equation entities
      tags:
      - Equation
    post:
      description: Create a new instance of a Equation
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
        description: A new Equationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Equation
      tags:
      - Equation
  /equations/{id}:
    delete:
      description: Delete an existing Equation
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Equation
      tags:
      - Equation
    get:
      description: Gets the details of a single instance of a Equation
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Gets the details of a single instance of  Equation
      summary: Get a Equation
      tags:
      - Equation
    put:
      description: Updates an existing Equation
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
        description: An old Equationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Equation
      tags:
      - Equation
  /farmingpracticess:
    get:
      description: Gets a list of all FarmingPractices entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FarmingPractices'
                type: array
          description: Successful response - returns an array of FarmingPractices
            entities.
      summary: List all FarmingPractices entities
      tags:
      - FarmingPractices
    post:
      description: Create a new instance of a FarmingPractices
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmingPractices'
        description: A new FarmingPracticesto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmingPractices'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a FarmingPractices
      tags:
      - FarmingPractices
  /farmingpracticess/{id}:
    delete:
      description: Delete an existing FarmingPractices
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a FarmingPractices
      tags:
      - FarmingPractices
    get:
      description: Gets the details of a single instance of a FarmingPractices
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmingPractices'
          description: Gets the details of a single instance of  FarmingPractices
      summary: Get a FarmingPractices
      tags:
      - FarmingPractices
    put:
      description: Updates an existing FarmingPractices
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FarmingPractices'
        description: An old FarmingPracticesto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FarmingPractices'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a FarmingPractices
      tags:
      - FarmingPractices
  /geocoordinatess:
    get:
      description: Gets a list of all GeoCoordinates entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoCoordinates'
                type: array
          description: Successful response - returns an array of GeoCoordinates entities.
      summary: List all GeoCoordinates entities
      tags:
      - GeoCoordinates
    post:
      description: Create a new instance of a GeoCoordinates
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCoordinates'
        description: A new GeoCoordinatesto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a GeoCoordinates
      tags:
      - GeoCoordinates
  /geocoordinatess/{id}:
    delete:
      description: Delete an existing GeoCoordinates
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a GeoCoordinates
      tags:
      - GeoCoordinates
    get:
      description: Gets the details of a single instance of a GeoCoordinates
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Gets the details of a single instance of  GeoCoordinates
      summary: Get a GeoCoordinates
      tags:
      - GeoCoordinates
    put:
      description: Updates an existing GeoCoordinates
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCoordinates'
        description: An old GeoCoordinatesto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a GeoCoordinates
      tags:
      - GeoCoordinates
  /geoshapes:
    get:
      description: Gets a list of all GeoShape entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoShape'
                type: array
          description: Successful response - returns an array of GeoShape entities.
      summary: List all GeoShape entities
      tags:
      - GeoShape
    post:
      description: Create a new instance of a GeoShape
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoShape'
        description: A new GeoShapeto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a GeoShape
      tags:
      - GeoShape
  /geoshapes/{id}:
    delete:
      description: Delete an existing GeoShape
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a GeoShape
      tags:
      - GeoShape
    get:
      description: Gets the details of a single instance of a GeoShape
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Gets the details of a single instance of  GeoShape
      summary: Get a GeoShape
      tags:
      - GeoShape
    put:
      description: Updates an existing GeoShape
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoShape'
        description: An old GeoShapeto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a GeoShape
      tags:
      - GeoShape
  /grids:
    get:
      description: Gets a list of all Grid entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Grid'
                type: array
          description: Successful response - returns an array of Grid entities.
      summary: List all Grid entities
      tags:
      - Grid
    post:
      description: Create a new instance of a Grid
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grid'
        description: A new Gridto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Grid
      tags:
      - Grid
  /grids/{id}:
    delete:
      description: Delete an existing Grid
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Grid
      tags:
      - Grid
    get:
      description: Gets the details of a single instance of a Grid
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Gets the details of a single instance of  Grid
      summary: Get a Grid
      tags:
      - Grid
    put:
      description: Updates an existing Grid
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grid'
        description: An old Gridto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Grid
      tags:
      - Grid
  /hybridmodels:
    get:
      description: Gets a list of all HybridModel entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HybridModel'
                type: array
          description: Successful response - returns an array of HybridModel entities.
      summary: List all HybridModel entities
      tags:
      - HybridModel
    post:
      description: Create a new instance of a HybridModel
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridModel'
        description: A new HybridModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a HybridModel
      tags:
      - HybridModel
  /hybridmodels/{id}:
    delete:
      description: Delete an existing HybridModel
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a HybridModel
      tags:
      - HybridModel
    get:
      description: Gets the details of a single instance of a HybridModel
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Gets the details of a single instance of  HybridModel
      summary: Get a HybridModel
      tags:
      - HybridModel
    put:
      description: Updates an existing HybridModel
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridModel'
        description: An old HybridModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a HybridModel
      tags:
      - HybridModel
  /interventions:
    get:
      description: Gets a list of all Intervention entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Intervention'
                type: array
          description: Successful response - returns an array of Intervention entities.
      summary: List all Intervention entities
      tags:
      - Intervention
    post:
      description: Create a new instance of a Intervention
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intervention'
        description: A new Interventionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intervention'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Intervention
      tags:
      - Intervention
  /interventions/{id}:
    delete:
      description: Delete an existing Intervention
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Intervention
      tags:
      - Intervention
    get:
      description: Gets the details of a single instance of a Intervention
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intervention'
          description: Gets the details of a single instance of  Intervention
      summary: Get a Intervention
      tags:
      - Intervention
    put:
      description: Updates an existing Intervention
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Intervention'
        description: An old Interventionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Intervention'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Intervention
      tags:
      - Intervention
  /models:
    get:
      description: Gets a list of all Model entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Successful response - returns an array of Model entities.
      summary: List all Model entities
      tags:
      - Model
    post:
      description: Create a new instance of a Model
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: A new Modelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Model
      tags:
      - Model
  /models/{id}:
    delete:
      description: Delete an existing Model
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Model
      tags:
      - Model
    get:
      description: Gets the details of a single instance of a Model
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Gets the details of a single instance of  Model
      summary: Get a Model
      tags:
      - Model
    put:
      description: Updates an existing Model
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: An old Modelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Model
      tags:
      - Model
  /modelconfigurations:
    get:
      description: Gets a list of all ModelConfiguration entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelConfiguration'
                type: array
          description: Successful response - returns an array of ModelConfiguration
            entities.
      summary: List all ModelConfiguration entities
      tags:
      - ModelConfiguration
    post:
      description: Create a new instance of a ModelConfiguration
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        description: A new ModelConfigurationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a ModelConfiguration
      tags:
      - ModelConfiguration
  /modelconfigurations/{id}:
    delete:
      description: Delete an existing ModelConfiguration
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a ModelConfiguration
      tags:
      - ModelConfiguration
    get:
      description: Gets the details of a single instance of a ModelConfiguration
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Gets the details of a single instance of  ModelConfiguration
      summary: Get a ModelConfiguration
      tags:
      - ModelConfiguration
    put:
      description: Updates an existing ModelConfiguration
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        description: An old ModelConfigurationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a ModelConfiguration
      tags:
      - ModelConfiguration
  /modelconfigurationsetups:
    get:
      description: Gets a list of all ModelConfigurationSetup entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelConfigurationSetup'
                type: array
          description: Successful response - returns an array of ModelConfigurationSetup
            entities.
      summary: List all ModelConfigurationSetup entities
      tags:
      - ModelConfigurationSetup
    post:
      description: Create a new instance of a ModelConfigurationSetup
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfigurationSetup'
        description: A new ModelConfigurationSetupto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
  /modelconfigurationsetups/{id}:
    delete:
      description: Delete an existing ModelConfigurationSetup
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
    get:
      description: Gets the details of a single instance of a ModelConfigurationSetup
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Gets the details of a single instance of  ModelConfigurationSetup
      summary: Get a ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
    put:
      description: Updates an existing ModelConfigurationSetup
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfigurationSetup'
        description: An old ModelConfigurationSetupto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
  /numericalindexs:
    get:
      description: Gets a list of all NumericalIndex entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NumericalIndex'
                type: array
          description: Successful response - returns an array of NumericalIndex entities.
      summary: List all NumericalIndex entities
      tags:
      - NumericalIndex
    post:
      description: Create a new instance of a NumericalIndex
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumericalIndex'
        description: A new NumericalIndexto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumericalIndex'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a NumericalIndex
      tags:
      - NumericalIndex
  /numericalindexs/{id}:
    delete:
      description: Delete an existing NumericalIndex
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a NumericalIndex
      tags:
      - NumericalIndex
    get:
      description: Gets the details of a single instance of a NumericalIndex
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumericalIndex'
          description: Gets the details of a single instance of  NumericalIndex
      summary: Get a NumericalIndex
      tags:
      - NumericalIndex
    put:
      description: Updates an existing NumericalIndex
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumericalIndex'
        description: An old NumericalIndexto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumericalIndex'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a NumericalIndex
      tags:
      - NumericalIndex
  /pointbasedgrids:
    get:
      description: Gets a list of all PointBasedGrid entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PointBasedGrid'
                type: array
          description: Successful response - returns an array of PointBasedGrid entities.
      summary: List all PointBasedGrid entities
      tags:
      - PointBasedGrid
    post:
      description: Create a new instance of a PointBasedGrid
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointBasedGrid'
        description: A new PointBasedGridto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a PointBasedGrid
      tags:
      - PointBasedGrid
  /pointbasedgrids/{id}:
    delete:
      description: Delete an existing PointBasedGrid
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a PointBasedGrid
      tags:
      - PointBasedGrid
    get:
      description: Gets the details of a single instance of a PointBasedGrid
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Gets the details of a single instance of  PointBasedGrid
      summary: Get a PointBasedGrid
      tags:
      - PointBasedGrid
    put:
      description: Updates an existing PointBasedGrid
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointBasedGrid'
        description: An old PointBasedGridto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a PointBasedGrid
      tags:
      - PointBasedGrid
  /processs:
    get:
      description: Gets a list of all Process entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Process'
                type: array
          description: Successful response - returns an array of Process entities.
      summary: List all Process entities
      tags:
      - Process
    post:
      description: Create a new instance of a Process
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Process'
        description: A new Processto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Process
      tags:
      - Process
  /processs/{id}:
    delete:
      description: Delete an existing Process
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Process
      tags:
      - Process
    get:
      description: Gets the details of a single instance of a Process
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Gets the details of a single instance of  Process
      summary: Get a Process
      tags:
      - Process
    put:
      description: Updates an existing Process
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Process'
        description: An old Processto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Process
      tags:
      - Process
  /regions:
    get:
      description: Gets a list of all Region entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Region'
                type: array
          description: Successful response - returns an array of Region entities.
      summary: List all Region entities
      tags:
      - Region
    post:
      description: Create a new instance of a Region
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        description: A new Regionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Region
      tags:
      - Region
  /regions/{id}:
    delete:
      description: Delete an existing Region
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Region
      tags:
      - Region
    get:
      description: Gets the details of a single instance of a Region
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Gets the details of a single instance of  Region
      summary: Get a Region
      tags:
      - Region
    put:
      description: Updates an existing Region
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        description: An old Regionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Region
      tags:
      - Region
  /spatialresolutions:
    get:
      description: Gets a list of all SpatialResolution entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpatialResolution'
                type: array
          description: Successful response - returns an array of SpatialResolution
            entities.
      summary: List all SpatialResolution entities
      tags:
      - SpatialResolution
    post:
      description: Create a new instance of a SpatialResolution
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialResolution'
        description: A new SpatialResolutionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SpatialResolution
      tags:
      - SpatialResolution
  /spatialresolutions/{id}:
    delete:
      description: Delete an existing SpatialResolution
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SpatialResolution
      tags:
      - SpatialResolution
    get:
      description: Gets the details of a single instance of a SpatialResolution
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Gets the details of a single instance of  SpatialResolution
      summary: Get a SpatialResolution
      tags:
      - SpatialResolution
    put:
      description: Updates an existing SpatialResolution
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialResolution'
        description: An old SpatialResolutionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SpatialResolution
      tags:
      - SpatialResolution
  /spatiallydistributedgrids:
    get:
      description: Gets a list of all SpatiallyDistributedGrid entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpatiallyDistributedGrid'
                type: array
          description: Successful response - returns an array of SpatiallyDistributedGrid
            entities.
      summary: List all SpatiallyDistributedGrid entities
      tags:
      - SpatiallyDistributedGrid
    post:
      description: Create a new instance of a SpatiallyDistributedGrid
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatiallyDistributedGrid'
        description: A new SpatiallyDistributedGridto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
  /spatiallydistributedgrids/{id}:
    delete:
      description: Delete an existing SpatiallyDistributedGrid
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
    get:
      description: Gets the details of a single instance of a SpatiallyDistributedGrid
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Gets the details of a single instance of  SpatiallyDistributedGrid
      summary: Get a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
    put:
      description: Updates an existing SpatiallyDistributedGrid
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatiallyDistributedGrid'
        description: An old SpatiallyDistributedGridto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
  /subsidys:
    get:
      description: Gets a list of all Subsidy entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subsidy'
                type: array
          description: Successful response - returns an array of Subsidy entities.
      summary: List all Subsidy entities
      tags:
      - Subsidy
    post:
      description: Create a new instance of a Subsidy
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subsidy'
        description: A new Subsidyto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsidy'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Subsidy
      tags:
      - Subsidy
  /subsidys/{id}:
    delete:
      description: Delete an existing Subsidy
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Subsidy
      tags:
      - Subsidy
    get:
      description: Gets the details of a single instance of a Subsidy
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsidy'
          description: Gets the details of a single instance of  Subsidy
      summary: Get a Subsidy
      tags:
      - Subsidy
    put:
      description: Updates an existing Subsidy
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subsidy'
        description: An old Subsidyto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subsidy'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Subsidy
      tags:
      - Subsidy
  /theory-guidedmodels:
    get:
      description: Gets a list of all Theory-GuidedModel entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Theory-GuidedModel'
                type: array
          description: Successful response - returns an array of Theory-GuidedModel
            entities.
      summary: List all Theory-GuidedModel entities
      tags:
      - Theory-GuidedModel
    post:
      description: Create a new instance of a Theory-GuidedModel
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theory-GuidedModel'
        description: A new Theory-GuidedModelto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
  /theory-guidedmodels/{id}:
    delete:
      description: Delete an existing Theory-GuidedModel
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
    get:
      description: Gets the details of a single instance of a Theory-GuidedModel
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Gets the details of a single instance of  Theory-GuidedModel
      summary: Get a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
    put:
      description: Updates an existing Theory-GuidedModel
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theory-GuidedModel'
        description: An old Theory-GuidedModelto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
  /timeintervals:
    get:
      description: Gets a list of all TimeInterval entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeInterval'
                type: array
          description: Successful response - returns an array of TimeInterval entities.
      summary: List all TimeInterval entities
      tags:
      - TimeInterval
    post:
      description: Create a new instance of a TimeInterval
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeInterval'
        description: A new TimeIntervalto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a TimeInterval
      tags:
      - TimeInterval
  /timeintervals/{id}:
    delete:
      description: Delete an existing TimeInterval
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a TimeInterval
      tags:
      - TimeInterval
    get:
      description: Gets the details of a single instance of a TimeInterval
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Gets the details of a single instance of  TimeInterval
      summary: Get a TimeInterval
      tags:
      - TimeInterval
    put:
      description: Updates an existing TimeInterval
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeInterval'
        description: An old TimeIntervalto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a TimeInterval
      tags:
      - TimeInterval
  /configurationsetups:
    get:
      description: Gets a list of all ConfigurationSetup entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConfigurationSetup'
                type: array
          description: Successful response - returns an array of ConfigurationSetup
            entities.
      summary: List all ConfigurationSetup entities
      tags:
      - ConfigurationSetup
    post:
      description: Create a new instance of a ConfigurationSetup
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationSetup'
        description: A new ConfigurationSetupto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSetup'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a ConfigurationSetup
      tags:
      - ConfigurationSetup
  /configurationsetups/{id}:
    delete:
      description: Delete an existing ConfigurationSetup
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a ConfigurationSetup
      tags:
      - ConfigurationSetup
    get:
      description: Gets the details of a single instance of a ConfigurationSetup
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSetup'
          description: Gets the details of a single instance of  ConfigurationSetup
      summary: Get a ConfigurationSetup
      tags:
      - ConfigurationSetup
    put:
      description: Updates an existing ConfigurationSetup
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationSetup'
        description: An old ConfigurationSetupto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationSetup'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a ConfigurationSetup
      tags:
      - ConfigurationSetup
  /datasetspecifications:
    get:
      description: Gets a list of all DatasetSpecification entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DatasetSpecification'
                type: array
          description: Successful response - returns an array of DatasetSpecification
            entities.
      summary: List all DatasetSpecification entities
      tags:
      - DatasetSpecification
    post:
      description: Create a new instance of a DatasetSpecification
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSpecification'
        description: A new DatasetSpecificationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSpecification'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a DatasetSpecification
      tags:
      - DatasetSpecification
  /datasetspecifications/{id}:
    delete:
      description: Delete an existing DatasetSpecification
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a DatasetSpecification
      tags:
      - DatasetSpecification
    get:
      description: Gets the details of a single instance of a DatasetSpecification
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSpecification'
          description: Gets the details of a single instance of  DatasetSpecification
      summary: Get a DatasetSpecification
      tags:
      - DatasetSpecification
    put:
      description: Updates an existing DatasetSpecification
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatasetSpecification'
        description: An old DatasetSpecificationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetSpecification'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a DatasetSpecification
      tags:
      - DatasetSpecification
  /fundinginformations:
    get:
      description: Gets a list of all FundingInformation entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FundingInformation'
                type: array
          description: Successful response - returns an array of FundingInformation
            entities.
      summary: List all FundingInformation entities
      tags:
      - FundingInformation
    post:
      description: Create a new instance of a FundingInformation
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingInformation'
        description: A new FundingInformationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingInformation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a FundingInformation
      tags:
      - FundingInformation
  /fundinginformations/{id}:
    delete:
      description: Delete an existing FundingInformation
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a FundingInformation
      tags:
      - FundingInformation
    get:
      description: Gets the details of a single instance of a FundingInformation
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingInformation'
          description: Gets the details of a single instance of  FundingInformation
      summary: Get a FundingInformation
      tags:
      - FundingInformation
    put:
      description: Updates an existing FundingInformation
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingInformation'
        description: An old FundingInformationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FundingInformation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a FundingInformation
      tags:
      - FundingInformation
  /icasavariables:
    get:
      description: Gets a list of all ICASAVariable entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ICASAVariable'
                type: array
          description: Successful response - returns an array of ICASAVariable entities.
      summary: List all ICASAVariable entities
      tags:
      - ICASAVariable
    post:
      description: Create a new instance of a ICASAVariable
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ICASAVariable'
        description: A new ICASAVariableto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICASAVariable'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a ICASAVariable
      tags:
      - ICASAVariable
  /icasavariables/{id}:
    delete:
      description: Delete an existing ICASAVariable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a ICASAVariable
      tags:
      - ICASAVariable
    get:
      description: Gets the details of a single instance of a ICASAVariable
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICASAVariable'
          description: Gets the details of a single instance of  ICASAVariable
      summary: Get a ICASAVariable
      tags:
      - ICASAVariable
    put:
      description: Updates an existing ICASAVariable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ICASAVariable'
        description: An old ICASAVariableto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICASAVariable'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a ICASAVariable
      tags:
      - ICASAVariable
  /images:
    get:
      description: Gets a list of all Image entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Image'
                type: array
          description: Successful response - returns an array of Image entities.
      summary: List all Image entities
      tags:
      - Image
    post:
      description: Create a new instance of a Image
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        description: A new Imageto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Image
      tags:
      - Image
  /images/{id}:
    delete:
      description: Delete an existing Image
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Image
      tags:
      - Image
    get:
      description: Gets the details of a single instance of a Image
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Gets the details of a single instance of  Image
      summary: Get a Image
      tags:
      - Image
    put:
      description: Updates an existing Image
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
        description: An old Imageto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Image
      tags:
      - Image
  /organizations:
    get:
      description: Gets a list of all Organization entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: Successful response - returns an array of Organization entities.
      summary: List all Organization entities
      tags:
      - Organization
    post:
      description: Create a new instance of a Organization
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: A new Organizationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Organization
      tags:
      - Organization
  /organizations/{id}:
    delete:
      description: Delete an existing Organization
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Organization
      tags:
      - Organization
    get:
      description: Gets the details of a single instance of a Organization
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Gets the details of a single instance of  Organization
      summary: Get a Organization
      tags:
      - Organization
    put:
      description: Updates an existing Organization
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
        description: An old Organizationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Organization
      tags:
      - Organization
  /parameters:
    get:
      description: Gets a list of all Parameter entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Parameter'
                type: array
          description: Successful response - returns an array of Parameter entities.
      summary: List all Parameter entities
      tags:
      - Parameter
    post:
      description: Create a new instance of a Parameter
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: A new Parameterto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Parameter
      tags:
      - Parameter
  /parameters/{id}:
    delete:
      description: Delete an existing Parameter
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Parameter
      tags:
      - Parameter
    get:
      description: Gets the details of a single instance of a Parameter
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: Gets the details of a single instance of  Parameter
      summary: Get a Parameter
      tags:
      - Parameter
    put:
      description: Updates an existing Parameter
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Parameter'
        description: An old Parameterto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Parameter'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Parameter
      tags:
      - Parameter
  /persons:
    get:
      description: Gets a list of all Person entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Person'
                type: array
          description: Successful response - returns an array of Person entities.
      summary: List all Person entities
      tags:
      - Person
    post:
      description: Create a new instance of a Person
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: A new Personto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Person
      tags:
      - Person
  /persons/{id}:
    delete:
      description: Delete an existing Person
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Person
      tags:
      - Person
    get:
      description: Gets the details of a single instance of a Person
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: Gets the details of a single instance of  Person
      summary: Get a Person
      tags:
      - Person
    put:
      description: Updates an existing Person
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
        description: An old Personto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Person
      tags:
      - Person
  /svovariables:
    get:
      description: Gets a list of all SVOVariable entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SVOVariable'
                type: array
          description: Successful response - returns an array of SVOVariable entities.
      summary: List all SVOVariable entities
      tags:
      - SVOVariable
    post:
      description: Create a new instance of a SVOVariable
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SVOVariable'
        description: A new SVOVariableto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SVOVariable'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SVOVariable
      tags:
      - SVOVariable
  /svovariables/{id}:
    delete:
      description: Delete an existing SVOVariable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SVOVariable
      tags:
      - SVOVariable
    get:
      description: Gets the details of a single instance of a SVOVariable
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SVOVariable'
          description: Gets the details of a single instance of  SVOVariable
      summary: Get a SVOVariable
      tags:
      - SVOVariable
    put:
      description: Updates an existing SVOVariable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SVOVariable'
        description: An old SVOVariableto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SVOVariable'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SVOVariable
      tags:
      - SVOVariable
  /samplecollections:
    get:
      description: Gets a list of all SampleCollection entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleCollection'
                type: array
          description: Successful response - returns an array of SampleCollection
            entities.
      summary: List all SampleCollection entities
      tags:
      - SampleCollection
    post:
      description: Create a new instance of a SampleCollection
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleCollection'
        description: A new SampleCollectionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SampleCollection
      tags:
      - SampleCollection
  /samplecollections/{id}:
    delete:
      description: Delete an existing SampleCollection
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SampleCollection
      tags:
      - SampleCollection
    get:
      description: Gets the details of a single instance of a SampleCollection
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
          description: Gets the details of a single instance of  SampleCollection
      summary: Get a SampleCollection
      tags:
      - SampleCollection
    put:
      description: Updates an existing SampleCollection
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleCollection'
        description: An old SampleCollectionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleCollection'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SampleCollection
      tags:
      - SampleCollection
  /sampleexecutions:
    get:
      description: Gets a list of all SampleExecution entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleExecution'
                type: array
          description: Successful response - returns an array of SampleExecution entities.
      summary: List all SampleExecution entities
      tags:
      - SampleExecution
    post:
      description: Create a new instance of a SampleExecution
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleExecution'
        description: A new SampleExecutionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleExecution'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SampleExecution
      tags:
      - SampleExecution
  /sampleexecutions/{id}:
    delete:
      description: Delete an existing SampleExecution
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SampleExecution
      tags:
      - SampleExecution
    get:
      description: Gets the details of a single instance of a SampleExecution
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleExecution'
          description: Gets the details of a single instance of  SampleExecution
      summary: Get a SampleExecution
      tags:
      - SampleExecution
    put:
      description: Updates an existing SampleExecution
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleExecution'
        description: An old SampleExecutionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleExecution'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SampleExecution
      tags:
      - SampleExecution
  /sampleresources:
    get:
      description: Gets a list of all SampleResource entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SampleResource'
                type: array
          description: Successful response - returns an array of SampleResource entities.
      summary: List all SampleResource entities
      tags:
      - SampleResource
    post:
      description: Create a new instance of a SampleResource
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleResource'
        description: A new SampleResourceto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResource'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SampleResource
      tags:
      - SampleResource
  /sampleresources/{id}:
    delete:
      description: Delete an existing SampleResource
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SampleResource
      tags:
      - SampleResource
    get:
      description: Gets the details of a single instance of a SampleResource
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResource'
          description: Gets the details of a single instance of  SampleResource
      summary: Get a SampleResource
      tags:
      - SampleResource
    put:
      description: Updates an existing SampleResource
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SampleResource'
        description: An old SampleResourceto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SampleResource'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SampleResource
      tags:
      - SampleResource
  /softwares:
    get:
      description: Gets a list of all Software entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Software'
                type: array
          description: Successful response - returns an array of Software entities.
      summary: List all Software entities
      tags:
      - Software
    post:
      description: Create a new instance of a Software
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Software'
        description: A new Softwareto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Software
      tags:
      - Software
  /softwares/{id}:
    delete:
      description: Delete an existing Software
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Software
      tags:
      - Software
    get:
      description: Gets the details of a single instance of a Software
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
          description: Gets the details of a single instance of  Software
      summary: Get a Software
      tags:
      - Software
    put:
      description: Updates an existing Software
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Software'
        description: An old Softwareto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Software'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Software
      tags:
      - Software
  /softwareconfigurations:
    get:
      description: Gets a list of all SoftwareConfiguration entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoftwareConfiguration'
                type: array
          description: Successful response - returns an array of SoftwareConfiguration
            entities.
      summary: List all SoftwareConfiguration entities
      tags:
      - SoftwareConfiguration
    post:
      description: Create a new instance of a SoftwareConfiguration
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareConfiguration'
        description: A new SoftwareConfigurationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareConfiguration'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SoftwareConfiguration
      tags:
      - SoftwareConfiguration
  /softwareconfigurations/{id}:
    delete:
      description: Delete an existing SoftwareConfiguration
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SoftwareConfiguration
      tags:
      - SoftwareConfiguration
    get:
      description: Gets the details of a single instance of a SoftwareConfiguration
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareConfiguration'
          description: Gets the details of a single instance of  SoftwareConfiguration
      summary: Get a SoftwareConfiguration
      tags:
      - SoftwareConfiguration
    put:
      description: Updates an existing SoftwareConfiguration
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareConfiguration'
        description: An old SoftwareConfigurationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareConfiguration'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SoftwareConfiguration
      tags:
      - SoftwareConfiguration
  /softwareimages:
    get:
      description: Gets a list of all SoftwareImage entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoftwareImage'
                type: array
          description: Successful response - returns an array of SoftwareImage entities.
      summary: List all SoftwareImage entities
      tags:
      - SoftwareImage
    post:
      description: Create a new instance of a SoftwareImage
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareImage'
        description: A new SoftwareImageto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareImage'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SoftwareImage
      tags:
      - SoftwareImage
  /softwareimages/{id}:
    delete:
      description: Delete an existing SoftwareImage
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SoftwareImage
      tags:
      - SoftwareImage
    get:
      description: Gets the details of a single instance of a SoftwareImage
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareImage'
          description: Gets the details of a single instance of  SoftwareImage
      summary: Get a SoftwareImage
      tags:
      - SoftwareImage
    put:
      description: Updates an existing SoftwareImage
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareImage'
        description: An old SoftwareImageto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareImage'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SoftwareImage
      tags:
      - SoftwareImage
  /softwareversions:
    get:
      description: Gets a list of all SoftwareVersion entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SoftwareVersion'
                type: array
          description: Successful response - returns an array of SoftwareVersion entities.
      summary: List all SoftwareVersion entities
      tags:
      - SoftwareVersion
    post:
      description: Create a new instance of a SoftwareVersion
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareVersion'
        description: A new SoftwareVersionto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SoftwareVersion
      tags:
      - SoftwareVersion
  /softwareversions/{id}:
    delete:
      description: Delete an existing SoftwareVersion
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SoftwareVersion
      tags:
      - SoftwareVersion
    get:
      description: Gets the details of a single instance of a SoftwareVersion
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
          description: Gets the details of a single instance of  SoftwareVersion
      summary: Get a SoftwareVersion
      tags:
      - SoftwareVersion
    put:
      description: Updates an existing SoftwareVersion
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftwareVersion'
        description: An old SoftwareVersionto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareVersion'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SoftwareVersion
      tags:
      - SoftwareVersion
  /sourcecodes:
    get:
      description: Gets a list of all SourceCode entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceCode'
                type: array
          description: Successful response - returns an array of SourceCode entities.
      summary: List all SourceCode entities
      tags:
      - SourceCode
    post:
      description: Create a new instance of a SourceCode
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCode'
        description: A new SourceCodeto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCode'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a SourceCode
      tags:
      - SourceCode
  /sourcecodes/{id}:
    delete:
      description: Delete an existing SourceCode
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a SourceCode
      tags:
      - SourceCode
    get:
      description: Gets the details of a single instance of a SourceCode
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCode'
          description: Gets the details of a single instance of  SourceCode
      summary: Get a SourceCode
      tags:
      - SourceCode
    put:
      description: Updates an existing SourceCode
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourceCode'
        description: An old SourceCodeto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourceCode'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a SourceCode
      tags:
      - SourceCode
  /standardvariables:
    get:
      description: Gets a list of all StandardVariable entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StandardVariable'
                type: array
          description: Successful response - returns an array of StandardVariable
            entities.
      summary: List all StandardVariable entities
      tags:
      - StandardVariable
    post:
      description: Create a new instance of a StandardVariable
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandardVariable'
        description: A new StandardVariableto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardVariable'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a StandardVariable
      tags:
      - StandardVariable
  /standardvariables/{id}:
    delete:
      description: Delete an existing StandardVariable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a StandardVariable
      tags:
      - StandardVariable
    get:
      description: Gets the details of a single instance of a StandardVariable
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardVariable'
          description: Gets the details of a single instance of  StandardVariable
      summary: Get a StandardVariable
      tags:
      - StandardVariable
    put:
      description: Updates an existing StandardVariable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StandardVariable'
        description: An old StandardVariableto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardVariable'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a StandardVariable
      tags:
      - StandardVariable
  /units:
    get:
      description: Gets a list of all Unit entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Unit'
                type: array
          description: Successful response - returns an array of Unit entities.
      summary: List all Unit entities
      tags:
      - Unit
    post:
      description: Create a new instance of a Unit
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
        description: A new Unitto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Unit
      tags:
      - Unit
  /units/{id}:
    delete:
      description: Delete an existing Unit
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Unit
      tags:
      - Unit
    get:
      description: Gets the details of a single instance of a Unit
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Gets the details of a single instance of  Unit
      summary: Get a Unit
      tags:
      - Unit
    put:
      description: Updates an existing Unit
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Unit'
        description: An old Unitto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Unit
      tags:
      - Unit
  /variables:
    get:
      description: Gets a list of all Variable entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Variable'
                type: array
          description: Successful response - returns an array of Variable entities.
      summary: List all Variable entities
      tags:
      - Variable
    post:
      description: Create a new instance of a Variable
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        description: A new Variableto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Variable
      tags:
      - Variable
  /variables/{id}:
    delete:
      description: Delete an existing Variable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Variable
      tags:
      - Variable
    get:
      description: Gets the details of a single instance of a Variable
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Gets the details of a single instance of  Variable
      summary: Get a Variable
      tags:
      - Variable
    put:
      description: Updates an existing Variable
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        description: An old Variableto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Variable
      tags:
      - Variable
  /variablepresentations:
    get:
      description: Gets a list of all VariablePresentation entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VariablePresentation'
                type: array
          description: Successful response - returns an array of VariablePresentation
            entities.
      summary: List all VariablePresentation entities
      tags:
      - VariablePresentation
    post:
      description: Create a new instance of a VariablePresentation
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariablePresentation'
        description: A new VariablePresentationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariablePresentation'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a VariablePresentation
      tags:
      - VariablePresentation
  /variablepresentations/{id}:
    delete:
      description: Delete an existing VariablePresentation
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a VariablePresentation
      tags:
      - VariablePresentation
    get:
      description: Gets the details of a single instance of a VariablePresentation
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariablePresentation'
          description: Gets the details of a single instance of  VariablePresentation
      summary: Get a VariablePresentation
      tags:
      - VariablePresentation
    put:
      description: Updates an existing VariablePresentation
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariablePresentation'
        description: An old VariablePresentationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariablePresentation'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a VariablePresentation
      tags:
      - VariablePresentation
  /visualizations:
    get:
      description: Gets a list of all Visualization entities
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Filter by label
        in: query
        name: label
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Visualization'
                type: array
          description: Successful response - returns an array of Visualization entities.
      summary: List all Visualization entities
      tags:
      - Visualization
    post:
      description: Create a new instance of a Visualization
      parameters:
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visualization'
        description: A new Visualizationto be created
      responses:
        201:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
          description: Created
      security:
      - BearerAuth: []
      summary: Create a Visualization
      tags:
      - Visualization
  /visualizations/{id}:
    delete:
      description: Delete an existing Visualization
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Delete a Visualization
      tags:
      - Visualization
    get:
      description: Gets the details of a single instance of a Visualization
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
          description: Gets the details of a single instance of  Visualization
      summary: Get a Visualization
      tags:
      - Visualization
    put:
      description: Updates an existing Visualization
      parameters:
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Username
        in: path
        name: user
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visualization'
        description: An old Visualizationto be updated
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visualization'
          description: Updated
        404:
          description: Not Found
      security:
      - BearerAuth: []
      summary: Update a Visualization
      tags:
      - Visualization
  /custom/model/index:
    get:
      description: Gets the details of a single instance of a Model
      parameters:
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_index
          type: string
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Label of NumericalIndex
        in: query
        name: label
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
          description: Gets the details of a single instance of Model
      summary: Get a Model
      tags:
      - Model
    x-oba-custom: true
  /custom/model/intervention:
    get:
      description: Gets the details of a single instance of a Model
      parameters:
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_intervetion
          type: string
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: Label of intervation
        in: query
        name: label
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
          description: Gets the details of a single instance of Model
      summary: Get a Model
      tags:
      - Model
    x-oba-custom: true
  /custom/models/standard_variable:
    get:
      description: Gets a list of model filter by the label of a standard variable
      parameters:
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_standard_variable
          type: string
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: standard variable name
        in: query
        name: label
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
          description: Gets a list of models
      summary: Get a list of models
      tags:
      - Model
    x-oba-custom: true
  /custom/model/region:
    get:
      description: Gets the details of a single instance of a Model
      parameters:
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_model_region
          type: string
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: region to search
        in: query
        name: label
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
          description: Gets the details of a single instance of Model
      summary: Get a Model
      tags:
      - Model
    x-oba-custom: true
  /custom/configurationsetups/{id}:
    get:
      description: Gets the details of a single instance of a ModelConfigurationSetup
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_configurationsetups
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Gets the details of a single instance of  ModelConfigurationSetup
      summary: Get a ModelConfigurationSetup
      tags:
      - ConfigurationSetup
    x-oba-custom: true
  /custom/modelconfigurationsetups/{id}:
    get:
      description: Gets the details of a single instance of a ModelConfigurationSetup
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_modelconfigurationsetups
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfigurationSetup'
          description: Gets the details of a single instance of  ModelConfigurationSetup
      summary: Get a ModelConfigurationSetup
      tags:
      - ModelConfigurationSetup
    x-oba-custom: true
  /custom/modelconfigurations/{id}:
    get:
      description: Gets the details of a single instance of a ModelConfiguration
      parameters:
      - description: Username to query
        in: query
        name: username
        required: false
        schema:
          type: string
      - description: The ID of the resource
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Name of the custom query
        in: query
        name: custom_query_name
        required: false
        schema:
          default: custom_modelconfigurations
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Gets the details of a single instance of ModelConfiguration
      summary: Get a ModelConfiguration
      tags:
      - ModelConfiguration
    x-oba-custom: true
components:
  schemas:
    Intervention:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Visualization:
      properties:
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        wasDerivedFromSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        value:
          items: {}
          nullable: true
          type: array
      type: object
    SourceCode:
      properties:
        license:
          items:
            type: string
          nullable: true
          type: array
        programmingLanguage:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        codeRepository:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    User:
      properties:
        password:
          type: string
        username:
          type: string
      type: object
      xml:
        name: User
    Organization:
      properties:
        identifier:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Variable:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    GeoShape:
      properties:
        elevation:
          items:
            type: string
          nullable: true
          type: array
        latitude:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        box:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        longitude:
          items:
            type: string
          nullable: true
          type: array
      type: object
    FarmingPractices:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Grid:
      properties:
        hasDimensionality:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          items:
            type: object
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        hasPresentation:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        hasSpatialResolution:
          items:
            type: string
          nullable: true
          type: array
        hasCoordinateSystem:
          items:
            type: string
          nullable: true
          type: array
        hasShape:
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          items:
            type: string
          nullable: true
          type: array
        position:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          nullable: false
          type: string
      type: object
    Emulator:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
      type: object
    Process:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        influences:
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
      type: object
    Image:
      properties:
        hasDimensionality:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        hasFileStructure:
          items:
            type: object
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        hasPresentation:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        position:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        value:
          items: {}
          nullable: true
          type: array
        hasFixedResource:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
      type: object
    Unit:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    StandardVariable:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    ModelConfigurationSetup:
      properties:
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        calibratedVariable:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        calibrationMethod:
          items:
            type: string
          nullable: true
          type: array
        hasRegion:
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        identifier:
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        hasConstraint:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasSetup:
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        calibrationInterval:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        hasOutput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasOutputTimeInterval:
          items:
            $ref: '#/components/schemas/TimeInterval'
          nullable: true
          type: array
        parameterAssignmentMethod:
          items:
            type: string
          nullable: true
          type: array
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          items:
            type: string
          nullable: true
          type: array
        hasProcess:
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        hasSoftwareImage:
          items:
            $ref: '#/components/schemas/SoftwareImage'
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasModelResultTable:
          items:
            type: string
          nullable: true
          type: array
        calibrationTargetVariable:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        hasCausalDiagram:
          items:
            $ref: '#/components/schemas/CausalDiagram'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        adjustableParameter:
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        validUntil:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    Theory-GuidedModel:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
      type: object
    EmpiricalModel:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
      type: object
    ModelConfiguration:
      properties:
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        hasRegion:
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        identifier:
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        hasConstraint:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasSetup:
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        hasOutput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasOutputTimeInterval:
          items:
            $ref: '#/components/schemas/TimeInterval'
          nullable: true
          type: array
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          items:
            type: string
          nullable: true
          type: array
        hasProcess:
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        hasSoftwareImage:
          items:
            $ref: '#/components/schemas/SoftwareImage'
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasModelResultTable:
          items:
            type: string
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        hasCausalDiagram:
          items:
            $ref: '#/components/schemas/CausalDiagram'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
        hasInput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    SpatiallyDistributedGrid:
      properties:
        hasDimensionality:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          items:
            type: object
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        hasPresentation:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        hasSpatialResolution:
          items:
            type: string
          nullable: true
          type: array
        hasCoordinateSystem:
          items:
            type: string
          nullable: true
          type: array
        hasShape:
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          items:
            type: string
          nullable: true
          type: array
        position:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          nullable: false
          type: string
      type: object
    SampleExecution:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
      type: object
    TimeInterval:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        intervalValue:
          items: {}
          nullable: true
          type: array
        intervalUnit:
          items:
            $ref: '#/components/schemas/Unit'
          nullable: true
          type: array
      type: object
    ConfigurationSetup:
      properties:
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        identifier:
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        hasConstraint:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasSetup:
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        hasOutput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        hasSoftwareImage:
          items:
            $ref: '#/components/schemas/SoftwareImage'
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        adjustableParameter:
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasInput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    SVOVariable:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    HybridModel:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
      type: object
    DatasetSpecification:
      properties:
        hasDimensionality:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          items:
            type: object
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        hasPresentation:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        position:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
      type: object
    FundingInformation:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        fundingSource:
          items:
            $ref: '#/components/schemas/Organization'
          nullable: true
          type: array
        fundingGrant:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Equation:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    CausalDiagram:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasPart:
          items:
            type: object
          nullable: true
          type: array
      type: object
    ICASAVariable:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SampleCollection:
      properties:
        dataCatalogIdentifier:
          items:
            type: string
          nullable: true
          type: array
        hasPart:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        value:
          items: {}
          nullable: true
          type: array
      type: object
    SoftwareConfiguration:
      properties:
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasImplementationScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        identifier:
          items:
            type: string
          nullable: true
          type: array
        hasSampleExecution:
          items:
            $ref: '#/components/schemas/SampleExecution'
          nullable: true
          type: array
        hasSampleResult:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        hasConstraint:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasSetup:
          items:
            $ref: '#/components/schemas/ConfigurationSetup'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        hasOutput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasComponentLocation:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        hasSoftwareImage:
          items:
            $ref: '#/components/schemas/SoftwareImage'
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        hasSupportScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          items:
            $ref: '#/components/schemas/Parameter'
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasInput:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
      type: object
    Subsidy:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    PointBasedGrid:
      properties:
        hasDimensionality:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          items:
            type: object
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        hasPresentation:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          items:
            $ref: '#/components/schemas/SampleResource'
          nullable: true
          type: array
        hasSpatialResolution:
          items:
            type: string
          nullable: true
          type: array
        hasCoordinateSystem:
          items:
            type: string
          nullable: true
          type: array
        hasShape:
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          items:
            type: string
          nullable: true
          type: array
        position:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          nullable: false
          type: string
      type: object
    GeoCoordinates:
      properties:
        elevation:
          items:
            type: string
          nullable: true
          type: array
        latitude:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        longitude:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SpatialResolution:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SoftwareVersion:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        hasConfiguration:
          items:
            $ref: '#/components/schemas/SoftwareConfiguration'
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        hasVersionId:
          items:
            type: string
          nullable: true
          type: array
      type: object
    SoftwareImage:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
      type: object
    NumericalIndex:
      properties:
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Model:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
        usefulForCalculatingIndex:
          items:
            $ref: '#/components/schemas/NumericalIndex'
          nullable: true
          type: array
      type: object
    Region:
      properties:
        geo:
          items:
            type: object
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        country:
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Parameter:
      properties:
        hasDefaultValue:
          items: {}
          nullable: true
          type: array
        hasMaximumAcceptedValue:
          items: {}
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        hasDataType:
          items:
            type: string
          nullable: true
          type: array
        hasFixedValue:
          items: {}
          nullable: true
          type: array
        hasPresentation:
          items:
            $ref: '#/components/schemas/VariablePresentation'
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasMinimumAcceptedValue:
          items: {}
          nullable: true
          type: array
        hasAcceptedValues:
          items:
            type: string
          nullable: true
          type: array
        adjustsVariable:
          items:
            $ref: '#/components/schemas/Variable'
          nullable: true
          type: array
        position:
          items:
            format: int32
            type: integer
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        usesUnit:
          items:
            $ref: '#/components/schemas/Unit'
          nullable: true
          type: array
        hasStepSize:
          items:
            type: number
          nullable: true
          type: array
      type: object
    SampleResource:
      properties:
        dataCatalogIdentifier:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        value:
          items: {}
          nullable: true
          type: array
      type: object
    Software:
      properties:
        hasFunding:
          items:
            $ref: '#/components/schemas/FundingInformation'
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        keywords:
          items:
            type: string
          nullable: true
          type: array
        supportDetails:
          items:
            type: string
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            $ref: '#/components/schemas/SoftwareVersion'
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hadPrimarySource:
          items:
            type: object
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            $ref: '#/components/schemas/Software'
          nullable: true
          type: array
        contributor:
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        logo:
          items:
            $ref: '#/components/schemas/Image'
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        hasSampleVisualization:
          items:
            $ref: '#/components/schemas/Visualization'
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          items:
            type: object
          nullable: true
          type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasUsageNotes:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            $ref: '#/components/schemas/SourceCode'
          nullable: true
          type: array
        hasExample:
          items:
            type: string
          nullable: true
          type: array
        publisher:
          items:
            type: object
          nullable: true
          type: array
      type: object
    VariablePresentation:
      properties:
        hasDefaultValue:
          items: {}
          nullable: true
          type: array
        hasStandardVariable:
          items:
            $ref: '#/components/schemas/StandardVariable'
          nullable: true
          type: array
        hasMaximumAcceptedValue:
          items: {}
          nullable: true
          type: array
        hasConstraint:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasLongName:
          items:
            type: string
          nullable: true
          type: array
        hasShortName:
          items:
            type: string
          nullable: true
          type: array
        hasMinimumAcceptedValue:
          items: {}
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        partOfDataset:
          items:
            $ref: '#/components/schemas/DatasetSpecification'
          nullable: true
          type: array
        usesUnit:
          items:
            $ref: '#/components/schemas/Unit'
          nullable: true
          type: array
      type: object
    Person:
      properties:
        identifier:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        id:
          nullable: false
          type: string
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        email:
          items:
            type: string
          nullable: true
          type: array
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.user_controller.decode_token
