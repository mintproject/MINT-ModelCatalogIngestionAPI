openapi: 3.0.1
info:
  description: This is MINT Model Catalog You can find out more about Model Catalog
    at [https://w3id.org/mint/modelCatalog/](https://w3id.org/mint/modelCatalog/)
  title: Model Catalog
  version: v1.0.0
externalDocs:
  description: Model Catalog
  url: https://w3id.org/mint/modelCatalog/
servers:
- url: https://api.models.mint.isi.edu/v1.0.0
- url: https://dev.api.models.mint.isi.edu/v1.0.0
- url: http://localhost:8080/v1.0.0
paths:
  /causaldiagrams:
    get:
      description: Gets a list of all CausalDiagram entities
      operationId: causaldiagrams_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CausalDiagram'
                type: array
          description: Successful response - returns an array of CausalDiagram entities.
      summary: List all CausalDiagram entities
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
    post:
      description: Create a new instance of a CausalDiagram
      operationId: causaldiagrams_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CausalDiagram'
        description: A new CausalDiagramto be created
      responses:
        201:
          description: Created
      summary: Create a CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
  /causaldiagrams/{id}:
    delete:
      description: Delete an existing CausalDiagram
      operationId: causaldiagrams_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
    get:
      description: Gets the details of a single instance of a CausalDiagram
      operationId: causaldiagrams_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CausalDiagram'
          description: Gets the details of a single instance of  CausalDiagram
      summary: Get a CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
    put:
      description: Updates an existing CausalDiagram
      operationId: causaldiagrams_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CausalDiagram'
        description: An old CausalDiagramto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a CausalDiagram
      tags:
      - CausalDiagram
      x-openapi-router-controller: openapi_server.controllers.causal_diagram_controller
  /empiricalmodels:
    get:
      description: Gets a list of all EmpiricalModel entities
      operationId: empiricalmodels_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EmpiricalModel'
                type: array
          description: Successful response - returns an array of EmpiricalModel entities.
      summary: List all EmpiricalModel entities
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
    post:
      description: Create a new instance of a EmpiricalModel
      operationId: empiricalmodels_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpiricalModel'
        description: A new EmpiricalModelto be created
      responses:
        201:
          description: Created
      summary: Create a EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
  /empiricalmodels/{id}:
    delete:
      description: Delete an existing EmpiricalModel
      operationId: empiricalmodels_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
    get:
      description: Gets the details of a single instance of a EmpiricalModel
      operationId: empiricalmodels_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmpiricalModel'
          description: Gets the details of a single instance of  EmpiricalModel
      summary: Get a EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
    put:
      description: Updates an existing EmpiricalModel
      operationId: empiricalmodels_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmpiricalModel'
        description: An old EmpiricalModelto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a EmpiricalModel
      tags:
      - EmpiricalModel
      x-openapi-router-controller: openapi_server.controllers.empirical_model_controller
  /emulators:
    get:
      description: Gets a list of all Emulator entities
      operationId: emulators_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Emulator'
                type: array
          description: Successful response - returns an array of Emulator entities.
      summary: List all Emulator entities
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
    post:
      description: Create a new instance of a Emulator
      operationId: emulators_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emulator'
        description: A new Emulatorto be created
      responses:
        201:
          description: Created
      summary: Create a Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
  /emulators/{id}:
    delete:
      description: Delete an existing Emulator
      operationId: emulators_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
    get:
      description: Gets the details of a single instance of a Emulator
      operationId: emulators_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Emulator'
          description: Gets the details of a single instance of  Emulator
      summary: Get a Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
    put:
      description: Updates an existing Emulator
      operationId: emulators_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Emulator'
        description: An old Emulatorto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Emulator
      tags:
      - Emulator
      x-openapi-router-controller: openapi_server.controllers.emulator_controller
  /equations:
    get:
      description: Gets a list of all Equation entities
      operationId: equations_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Equation'
                type: array
          description: Successful response - returns an array of Equation entities.
      summary: List all Equation entities
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
    post:
      description: Create a new instance of a Equation
      operationId: equations_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
        description: A new Equationto be created
      responses:
        201:
          description: Created
      summary: Create a Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
  /equations/{id}:
    delete:
      description: Delete an existing Equation
      operationId: equations_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
    get:
      description: Gets the details of a single instance of a Equation
      operationId: equations_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Equation'
          description: Gets the details of a single instance of  Equation
      summary: Get a Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
    put:
      description: Updates an existing Equation
      operationId: equations_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Equation'
        description: An old Equationto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Equation
      tags:
      - Equation
      x-openapi-router-controller: openapi_server.controllers.equation_controller
  /geocoordinatess:
    get:
      description: Gets a list of all GeoCoordinates entities
      operationId: geocoordinatess_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoCoordinates'
                type: array
          description: Successful response - returns an array of GeoCoordinates entities.
      summary: List all GeoCoordinates entities
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
    post:
      description: Create a new instance of a GeoCoordinates
      operationId: geocoordinatess_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCoordinates'
        description: A new GeoCoordinatesto be created
      responses:
        201:
          description: Created
      summary: Create a GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
  /geocoordinatess/{id}:
    delete:
      description: Delete an existing GeoCoordinates
      operationId: geocoordinatess_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
    get:
      description: Gets the details of a single instance of a GeoCoordinates
      operationId: geocoordinatess_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoCoordinates'
          description: Gets the details of a single instance of  GeoCoordinates
      summary: Get a GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
    put:
      description: Updates an existing GeoCoordinates
      operationId: geocoordinatess_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoCoordinates'
        description: An old GeoCoordinatesto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a GeoCoordinates
      tags:
      - GeoCoordinates
      x-openapi-router-controller: openapi_server.controllers.geo_coordinates_controller
  /geoshapes:
    get:
      description: Gets a list of all GeoShape entities
      operationId: geoshapes_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GeoShape'
                type: array
          description: Successful response - returns an array of GeoShape entities.
      summary: List all GeoShape entities
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
    post:
      description: Create a new instance of a GeoShape
      operationId: geoshapes_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoShape'
        description: A new GeoShapeto be created
      responses:
        201:
          description: Created
      summary: Create a GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
  /geoshapes/{id}:
    delete:
      description: Delete an existing GeoShape
      operationId: geoshapes_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
    get:
      description: Gets the details of a single instance of a GeoShape
      operationId: geoshapes_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeoShape'
          description: Gets the details of a single instance of  GeoShape
      summary: Get a GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
    put:
      description: Updates an existing GeoShape
      operationId: geoshapes_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeoShape'
        description: An old GeoShapeto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a GeoShape
      tags:
      - GeoShape
      x-openapi-router-controller: openapi_server.controllers.geo_shape_controller
  /grids:
    get:
      description: Gets a list of all Grid entities
      operationId: grids_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Grid'
                type: array
          description: Successful response - returns an array of Grid entities.
      summary: List all Grid entities
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
    post:
      description: Create a new instance of a Grid
      operationId: grids_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grid'
        description: A new Gridto be created
      responses:
        201:
          description: Created
      summary: Create a Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
  /grids/{id}:
    delete:
      description: Delete an existing Grid
      operationId: grids_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
    get:
      description: Gets the details of a single instance of a Grid
      operationId: grids_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grid'
          description: Gets the details of a single instance of  Grid
      summary: Get a Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
    put:
      description: Updates an existing Grid
      operationId: grids_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grid'
        description: An old Gridto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Grid
      tags:
      - Grid
      x-openapi-router-controller: openapi_server.controllers.grid_controller
  /hybridmodels:
    get:
      description: Gets a list of all HybridModel entities
      operationId: hybridmodels_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HybridModel'
                type: array
          description: Successful response - returns an array of HybridModel entities.
      summary: List all HybridModel entities
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
    post:
      description: Create a new instance of a HybridModel
      operationId: hybridmodels_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridModel'
        description: A new HybridModelto be created
      responses:
        201:
          description: Created
      summary: Create a HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
  /hybridmodels/{id}:
    delete:
      description: Delete an existing HybridModel
      operationId: hybridmodels_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
    get:
      description: Gets the details of a single instance of a HybridModel
      operationId: hybridmodels_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HybridModel'
          description: Gets the details of a single instance of  HybridModel
      summary: Get a HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
    put:
      description: Updates an existing HybridModel
      operationId: hybridmodels_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HybridModel'
        description: An old HybridModelto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a HybridModel
      tags:
      - HybridModel
      x-openapi-router-controller: openapi_server.controllers.hybrid_model_controller
  /modelconfigurations:
    get:
      description: Gets a list of all ModelConfiguration entities
      operationId: modelconfigurations_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ModelConfiguration'
                type: array
          description: Successful response - returns an array of ModelConfiguration
            entities.
      summary: List all ModelConfiguration entities
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    post:
      description: Create a new instance of a ModelConfiguration
      operationId: modelconfigurations_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        description: A new ModelConfigurationto be created
      responses:
        201:
          description: Created
      summary: Create a ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
  /modelconfigurations/{id}:
    delete:
      description: Delete an existing ModelConfiguration
      operationId: modelconfigurations_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    get:
      description: Gets the details of a single instance of a ModelConfiguration
      operationId: modelconfigurations_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: Gets the details of a single instance of  ModelConfiguration
      summary: Get a ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
    put:
      description: Updates an existing ModelConfiguration
      operationId: modelconfigurations_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        description: An old ModelConfigurationto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a ModelConfiguration
      tags:
      - ModelConfiguration
      x-openapi-router-controller: openapi_server.controllers.model_configuration_controller
  /models:
    get:
      description: Gets a list of all Model entities
      operationId: models_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Model'
                type: array
          description: Successful response - returns an array of Model entities.
      summary: List all Model entities
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    post:
      description: Create a new instance of a Model
      operationId: models_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: A new Modelto be created
      responses:
        201:
          description: Created
      summary: Create a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
  /models/{id}:
    delete:
      description: Delete an existing Model
      operationId: models_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    get:
      description: Gets the details of a single instance of a Model
      operationId: models_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model'
          description: Gets the details of a single instance of  Model
      summary: Get a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
    put:
      description: Updates an existing Model
      operationId: models_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
        description: An old Modelto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Model
      tags:
      - Model
      x-openapi-router-controller: openapi_server.controllers.model_controller
  /pointbasedgrids:
    get:
      description: Gets a list of all PointBasedGrid entities
      operationId: pointbasedgrids_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PointBasedGrid'
                type: array
          description: Successful response - returns an array of PointBasedGrid entities.
      summary: List all PointBasedGrid entities
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
    post:
      description: Create a new instance of a PointBasedGrid
      operationId: pointbasedgrids_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointBasedGrid'
        description: A new PointBasedGridto be created
      responses:
        201:
          description: Created
      summary: Create a PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
  /pointbasedgrids/{id}:
    delete:
      description: Delete an existing PointBasedGrid
      operationId: pointbasedgrids_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
    get:
      description: Gets the details of a single instance of a PointBasedGrid
      operationId: pointbasedgrids_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointBasedGrid'
          description: Gets the details of a single instance of  PointBasedGrid
      summary: Get a PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
    put:
      description: Updates an existing PointBasedGrid
      operationId: pointbasedgrids_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointBasedGrid'
        description: An old PointBasedGridto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a PointBasedGrid
      tags:
      - PointBasedGrid
      x-openapi-router-controller: openapi_server.controllers.point_based_grid_controller
  /processs:
    get:
      description: Gets a list of all Process entities
      operationId: processs_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Process'
                type: array
          description: Successful response - returns an array of Process entities.
      summary: List all Process entities
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
    post:
      description: Create a new instance of a Process
      operationId: processs_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Process'
        description: A new Processto be created
      responses:
        201:
          description: Created
      summary: Create a Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
  /processs/{id}:
    delete:
      description: Delete an existing Process
      operationId: processs_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
    get:
      description: Gets the details of a single instance of a Process
      operationId: processs_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
          description: Gets the details of a single instance of  Process
      summary: Get a Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
    put:
      description: Updates an existing Process
      operationId: processs_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Process'
        description: An old Processto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Process
      tags:
      - Process
      x-openapi-router-controller: openapi_server.controllers.process_controller
  /regions:
    get:
      description: Gets a list of all Region entities
      operationId: regions_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Region'
                type: array
          description: Successful response - returns an array of Region entities.
      summary: List all Region entities
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
    post:
      description: Create a new instance of a Region
      operationId: regions_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        description: A new Regionto be created
      responses:
        201:
          description: Created
      summary: Create a Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
  /regions/{id}:
    delete:
      description: Delete an existing Region
      operationId: regions_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
    get:
      description: Gets the details of a single instance of a Region
      operationId: regions_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Region'
          description: Gets the details of a single instance of  Region
      summary: Get a Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
    put:
      description: Updates an existing Region
      operationId: regions_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Region'
        description: An old Regionto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Region
      tags:
      - Region
      x-openapi-router-controller: openapi_server.controllers.region_controller
  /spatiallydistributedgrids:
    get:
      description: Gets a list of all SpatiallyDistributedGrid entities
      operationId: spatiallydistributedgrids_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpatiallyDistributedGrid'
                type: array
          description: Successful response - returns an array of SpatiallyDistributedGrid
            entities.
      summary: List all SpatiallyDistributedGrid entities
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
    post:
      description: Create a new instance of a SpatiallyDistributedGrid
      operationId: spatiallydistributedgrids_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatiallyDistributedGrid'
        description: A new SpatiallyDistributedGridto be created
      responses:
        201:
          description: Created
      summary: Create a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
  /spatiallydistributedgrids/{id}:
    delete:
      description: Delete an existing SpatiallyDistributedGrid
      operationId: spatiallydistributedgrids_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
    get:
      description: Gets the details of a single instance of a SpatiallyDistributedGrid
      operationId: spatiallydistributedgrids_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatiallyDistributedGrid'
          description: Gets the details of a single instance of  SpatiallyDistributedGrid
      summary: Get a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
    put:
      description: Updates an existing SpatiallyDistributedGrid
      operationId: spatiallydistributedgrids_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatiallyDistributedGrid'
        description: An old SpatiallyDistributedGridto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a SpatiallyDistributedGrid
      tags:
      - SpatiallyDistributedGrid
      x-openapi-router-controller: openapi_server.controllers.spatially_distributed_grid_controller
  /spatialresolutions:
    get:
      description: Gets a list of all SpatialResolution entities
      operationId: spatialresolutions_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SpatialResolution'
                type: array
          description: Successful response - returns an array of SpatialResolution
            entities.
      summary: List all SpatialResolution entities
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
    post:
      description: Create a new instance of a SpatialResolution
      operationId: spatialresolutions_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialResolution'
        description: A new SpatialResolutionto be created
      responses:
        201:
          description: Created
      summary: Create a SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
  /spatialresolutions/{id}:
    delete:
      description: Delete an existing SpatialResolution
      operationId: spatialresolutions_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
    get:
      description: Gets the details of a single instance of a SpatialResolution
      operationId: spatialresolutions_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpatialResolution'
          description: Gets the details of a single instance of  SpatialResolution
      summary: Get a SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
    put:
      description: Updates an existing SpatialResolution
      operationId: spatialresolutions_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpatialResolution'
        description: An old SpatialResolutionto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a SpatialResolution
      tags:
      - SpatialResolution
      x-openapi-router-controller: openapi_server.controllers.spatial_resolution_controller
  /theory-guidedmodels:
    get:
      description: Gets a list of all Theory-GuidedModel entities
      operationId: theory_guidedmodels_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Theory-GuidedModel'
                type: array
          description: Successful response - returns an array of Theory-GuidedModel
            entities.
      summary: List all Theory-GuidedModel entities
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
    post:
      description: Create a new instance of a Theory-GuidedModel
      operationId: theory_guidedmodels_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theory-GuidedModel'
        description: A new Theory-GuidedModelto be created
      responses:
        201:
          description: Created
      summary: Create a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
  /theory-guidedmodels/{id}:
    delete:
      description: Delete an existing Theory-GuidedModel
      operationId: theory_guidedmodels_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
    get:
      description: Gets the details of a single instance of a Theory-GuidedModel
      operationId: theory_guidedmodels_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theory-GuidedModel'
          description: Gets the details of a single instance of  Theory-GuidedModel
      summary: Get a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
    put:
      description: Updates an existing Theory-GuidedModel
      operationId: theory_guidedmodels_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Theory-GuidedModel'
        description: An old Theory-GuidedModelto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a Theory-GuidedModel
      tags:
      - Theory-GuidedModel
      x-openapi-router-controller: openapi_server.controllers.theory_guided_model_controller
  /timeintervals:
    get:
      description: Gets a list of all TimeInterval entities
      operationId: timeintervals_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TimeInterval'
                type: array
          description: Successful response - returns an array of TimeInterval entities.
      summary: List all TimeInterval entities
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
    post:
      description: Create a new instance of a TimeInterval
      operationId: timeintervals_post
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeInterval'
        description: A new TimeIntervalto be created
      responses:
        201:
          description: Created
      summary: Create a TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
  /timeintervals/{id}:
    delete:
      description: Delete an existing TimeInterval
      operationId: timeintervals_id_delete
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        202:
          description: Deleted
        404:
          description: Not Found
      summary: Delete a TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
    get:
      description: Gets the details of a single instance of a TimeInterval
      operationId: timeintervals_id_get
      parameters:
      - description: Username to query
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeInterval'
          description: Gets the details of a single instance of  TimeInterval
      summary: Get a TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
    put:
      description: Updates an existing TimeInterval
      operationId: timeintervals_id_put
      parameters:
      - description: The ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeInterval'
        description: An old TimeIntervalto be updated
      responses:
        200:
          description: Updated
        404:
          description: Not Found
      summary: Update a TimeInterval
      tags:
      - TimeInterval
      x-openapi-router-controller: openapi_server.controllers.time_interval_controller
components:
  schemas:
    TimeInterval:
      example:
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
      properties:
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    GeoShape:
      example:
        elevation:
        - elevation
        - elevation
        latitude:
        - latitude
        - latitude
        box:
        - box
        - box
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        longitude:
        - longitude
        - longitude
      properties:
        elevation:
          items:
            type: string
          nullable: true
          type: array
        latitude:
          items:
            type: string
          nullable: true
          type: array
        box:
          items:
            type: string
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        longitude:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    Grid:
      example:
        hasDimensionality:
        - 0.8008281904610115
        - 0.8008281904610115
        hasFormat:
        - hasFormat
        - hasFormat
        hasFileStructure: '{}'
        hasPresentation:
        - '{}'
        - '{}'
        label:
        - label
        - label
        type:
        - type
        - type
        hasFixedResource:
        - '{}'
        - '{}'
        hasSpatialResolution:
        - hasSpatialResolution
        - hasSpatialResolution
        hasCoordinateSystem:
        - hasCoordinateSystem
        - hasCoordinateSystem
        hasShape:
        - hasShape
        - hasShape
        hasDimension:
        - hasDimension
        - hasDimension
        position:
        - 6.027456183070403
        - 6.027456183070403
        id:
        - id
        - id
      properties:
        hasDimensionality:
          items:
            type: number
          nullable: true
          type: array
        hasFormat:
          items:
            type: string
          nullable: true
          type: array
        hasFileStructure:
          nullable: true
          type: object
        hasPresentation:
          items:
            type: object
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasFixedResource:
          items:
            type: object
          nullable: true
          type: array
        hasSpatialResolution:
          items:
            type: string
          nullable: true
          type: array
        hasCoordinateSystem:
          items:
            type: string
          nullable: true
          type: array
        hasShape:
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          items:
            type: string
          nullable: true
          type: array
        position:
          items:
            type: number
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
      required:
      - id
      type: object
    HybridModel:
      example:
        hasGrid:
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        hasExplanationDiagram:
        - '{}'
        - '{}'
        hasEquation:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        hasModelCategory:
        - hasModelCategory
        - hasModelCategory
      properties:
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            type: object
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    Equation:
      example:
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
      properties:
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    CausalDiagram:
      example:
        hasPart: ""
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
      properties:
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasPart:
          anyOf:
          - items:
              type: object
            nullable: true
            type: array
          - items:
              $ref: '#/components/schemas/Process'
            nullable: true
            type: array
      required:
      - id
      type: object
    Emulator:
      example:
        hasGrid:
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        hasExplanationDiagram:
        - '{}'
        - '{}'
        hasEquation:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        hasModelCategory:
        - hasModelCategory
        - hasModelCategory
      properties:
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            type: object
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    Process:
      example:
        influences:
        - null
        - null
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
      properties:
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        influences:
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
      required:
      - id
      type: object
    PointBasedGrid:
      example:
        hasShape:
        - hasShape
        - hasShape
        hasDimension:
        - hasDimension
        - hasDimension
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        hasSpatialResolution:
        - hasSpatialResolution
        - hasSpatialResolution
        hasCoordinateSystem:
        - hasCoordinateSystem
        - hasCoordinateSystem
      properties:
        hasShape:
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          items:
            type: string
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasSpatialResolution:
          items:
            type: string
          nullable: true
          type: array
        hasCoordinateSystem:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    GeoCoordinates:
      example:
        elevation:
        - elevation
        - elevation
        latitude:
        - latitude
        - latitude
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        longitude:
        - longitude
        - longitude
      properties:
        elevation:
          items:
            type: string
          nullable: true
          type: array
        latitude:
          items:
            type: string
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        longitude:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    SpatialResolution:
      example:
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
      properties:
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    Theory-GuidedModel:
      example:
        hasGrid:
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        hasExplanationDiagram:
        - '{}'
        - '{}'
        hasEquation:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        hasModelCategory:
        - hasModelCategory
        - hasModelCategory
      properties:
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            type: object
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    Model:
      example:
        keywords:
        - keywords
        - keywords
        hasDocumentation:
        - hasDocumentation
        - hasDocumentation
        hasGrid:
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        softwareRequirements:
        - softwareRequirements
        - softwareRequirements
        hasVersion:
        - '{}'
        - '{}'
        hasTypicalDataSource:
        - hasTypicalDataSource
        - hasTypicalDataSource
        hasDownloadURL:
        - hasDownloadURL
        - hasDownloadURL
        referencePublication:
        - referencePublication
        - referencePublication
        description:
        - description
        - description
        screenshot:
        - '{}'
        - '{}'
        type:
        - type
        - type
        hasInstallationInstructions:
        - hasInstallationInstructions
        - hasInstallationInstructions
        hasModelCategory:
        - hasModelCategory
        - hasModelCategory
        dateCreated:
        - dateCreated
        - dateCreated
        contributor:
        - '{}'
        - '{}'
        hasFAQ:
        - hasFAQ
        - hasFAQ
        hasContactPerson:
        - '{}'
        - '{}'
        logo:
        - '{}'
        - '{}'
        hasPurpose:
        - hasPurpose
        - hasPurpose
        id:
        - id
        - id
        hasSampleVisualization:
        - '{}'
        - '{}'
        identifier:
        - identifier
        - identifier
        memoryRequirements:
        - memoryRequirements
        - memoryRequirements
        website:
        - website
        - website
        citation:
        - citation
        - citation
        author: ""
        processorRequirements:
        - processorRequirements
        - processorRequirements
        shortDescription:
        - shortDescription
        - shortDescription
        label:
        - label
        - label
        hasAssumption:
        - hasAssumption
        - hasAssumption
        datePublished:
        - datePublished
        - datePublished
        operatingSystems:
        - operatingSystems
        - operatingSystems
        license:
        - license
        - license
        hasSourceCode:
        - '{}'
        - '{}'
        hasExplanationDiagram:
        - '{}'
        - '{}'
        publisher: ""
        hasEquation:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        fundingSource:
        - '{}'
        - '{}'
      properties:
        keywords:
          items:
            type: string
          nullable: true
          type: array
        hasDocumentation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        softwareRequirements:
          items:
            type: string
          nullable: true
          type: array
        hasVersion:
          items:
            type: object
          nullable: true
          type: array
        hasTypicalDataSource:
          items:
            type: string
          nullable: true
          type: array
        hasDownloadURL:
          items:
            type: string
          nullable: true
          type: array
        referencePublication:
          items:
            type: string
          nullable: true
          type: array
        description:
          items:
            type: string
          nullable: true
          type: array
        screenshot:
          items:
            type: object
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasInstallationInstructions:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        dateCreated:
          items:
            type: string
          nullable: true
          type: array
        contributor:
          items:
            type: object
          nullable: true
          type: array
        hasFAQ:
          items:
            type: string
          nullable: true
          type: array
        hasContactPerson:
          items:
            type: object
          nullable: true
          type: array
        logo:
          items:
            type: object
          nullable: true
          type: array
        hasPurpose:
          items:
            type: string
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        hasSampleVisualization:
          items:
            type: object
          nullable: true
          type: array
        identifier:
          items:
            type: string
          nullable: true
          type: array
        memoryRequirements:
          items:
            type: string
          nullable: true
          type: array
        website:
          items:
            type: string
          nullable: true
          type: array
        citation:
          items:
            type: string
          nullable: true
          type: array
        author:
          anyOf:
          - items:
              type: object
            nullable: true
            type: array
          - items:
              type: object
            nullable: true
            type: array
        processorRequirements:
          items:
            type: string
          nullable: true
          type: array
        shortDescription:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasAssumption:
          items:
            type: string
          nullable: true
          type: array
        datePublished:
          items:
            type: string
          nullable: true
          type: array
        operatingSystems:
          items:
            type: string
          nullable: true
          type: array
        license:
          items:
            type: string
          nullable: true
          type: array
        hasSourceCode:
          items:
            type: object
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            type: object
          nullable: true
          type: array
        publisher:
          anyOf:
          - items:
              type: object
            nullable: true
            type: array
          - items:
              type: object
            nullable: true
            type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        fundingSource:
          items:
            type: object
          nullable: true
          type: array
      required:
      - id
      type: object
    Region:
      example:
        geo: ""
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
      properties:
        geo:
          anyOf:
          - items:
              $ref: '#/components/schemas/GeoCoordinates'
            nullable: true
            type: array
          - items:
              $ref: '#/components/schemas/GeoShape'
            nullable: true
            type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    EmpiricalModel:
      example:
        hasGrid:
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        hasExplanationDiagram:
        - '{}'
        - '{}'
        hasEquation:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        hasModelCategory:
        - hasModelCategory
        - hasModelCategory
      properties:
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            type: object
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
    ModelConfiguration:
      example:
        parameterAssignmentMethod:
        - parameterAssignmentMethod
        - parameterAssignmentMethod
        hasComponentLocation:
        - hasComponentLocation
        - hasComponentLocation
        hasGrid:
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        - hasDimensionality:
          - 0.8008281904610115
          - 0.8008281904610115
          hasFormat:
          - hasFormat
          - hasFormat
          hasFileStructure: '{}'
          hasPresentation:
          - '{}'
          - '{}'
          label:
          - label
          - label
          type:
          - type
          - type
          hasFixedResource:
          - '{}'
          - '{}'
          hasSpatialResolution:
          - hasSpatialResolution
          - hasSpatialResolution
          hasCoordinateSystem:
          - hasCoordinateSystem
          - hasCoordinateSystem
          hasShape:
          - hasShape
          - hasShape
          hasDimension:
          - hasDimension
          - hasDimension
          position:
          - 6.027456183070403
          - 6.027456183070403
          id:
          - id
          - id
        hasProcess:
        - influences:
          - null
          - null
          id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - influences:
          - null
          - null
          id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        hasImplementationScriptLocation:
        - hasImplementationScriptLocation
        - hasImplementationScriptLocation
        type:
        - type
        - type
        calibratedVariable:
        - '{}'
        - '{}'
        hasModelCategory:
        - hasModelCategory
        - hasModelCategory
        hasSoftwareImage:
        - '{}'
        - '{}'
        compatibleVisualizationSoftware:
        - '{}'
        - '{}'
        calibrationMethod:
        - calibrationMethod
        - calibrationMethod
        hasRegion:
        - geo: ""
          id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - geo: ""
          id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        hasModelResultTable:
        - hasModelResultTable
        - hasModelResultTable
        calibrationTargetVariable:
        - '{}'
        - '{}'
        id:
        - id
        - id
        hasExpertTunedModel:
        - null
        - null
        hasCalibration:
        - null
        - null
        hasCausalDiagram:
        - hasPart: ""
          id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - hasPart: ""
          id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        hasSampleExecution:
        - '{}'
        - '{}'
        hasSampleResult:
        - '{}'
        - '{}'
        hasConstraint:
        - hasConstraint
        - hasConstraint
        adjustableParameter:
        - '{}'
        - '{}'
        hasSupportScriptLocation:
        - hasSupportScriptLocation
        - hasSupportScriptLocation
        label:
        - label
        - label
        hasExecutionCommand:
        - hasExecutionCommand
        - hasExecutionCommand
        hasParameter:
        - '{}'
        - '{}'
        hasExplanationDiagram:
        - '{}'
        - '{}'
        hasEquation:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        hasOutput:
        - '{}'
        - '{}'
        hasOutputTimeInterval:
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        - id:
          - id
          - id
          label:
          - label
          - label
          type:
          - type
          - type
        hasInput:
        - '{}'
        - '{}'
      properties:
        parameterAssignmentMethod:
          items:
            type: string
          nullable: true
          type: array
        hasComponentLocation:
          items:
            type: string
          nullable: true
          type: array
        hasGrid:
          items:
            $ref: '#/components/schemas/Grid'
          nullable: true
          type: array
        hasProcess:
          items:
            $ref: '#/components/schemas/Process'
          nullable: true
          type: array
        hasImplementationScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        calibratedVariable:
          items:
            type: object
          nullable: true
          type: array
        hasModelCategory:
          items:
            type: string
          nullable: true
          type: array
        hasSoftwareImage:
          items:
            type: object
          nullable: true
          type: array
        compatibleVisualizationSoftware:
          items:
            type: object
          nullable: true
          type: array
        calibrationMethod:
          items:
            type: string
          nullable: true
          type: array
        hasRegion:
          items:
            $ref: '#/components/schemas/Region'
          nullable: true
          type: array
        hasModelResultTable:
          items:
            type: string
          nullable: true
          type: array
        calibrationTargetVariable:
          items:
            type: object
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        hasExpertTunedModel:
          items:
            $ref: '#/components/schemas/ModelConfiguration'
          nullable: true
          type: array
        hasCalibration:
          items:
            $ref: '#/components/schemas/ModelConfiguration'
          nullable: true
          type: array
        hasCausalDiagram:
          items:
            $ref: '#/components/schemas/CausalDiagram'
          nullable: true
          type: array
        hasSampleExecution:
          items:
            type: object
          nullable: true
          type: array
        hasSampleResult:
          items:
            type: object
          nullable: true
          type: array
        hasConstraint:
          items:
            type: string
          nullable: true
          type: array
        adjustableParameter:
          items:
            type: object
          nullable: true
          type: array
        hasSupportScriptLocation:
          items:
            type: string
          nullable: true
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        hasExecutionCommand:
          items:
            type: string
          nullable: true
          type: array
        hasParameter:
          items:
            type: object
          nullable: true
          type: array
        hasExplanationDiagram:
          items:
            type: object
          nullable: true
          type: array
        hasEquation:
          items:
            $ref: '#/components/schemas/Equation'
          nullable: true
          type: array
        hasOutput:
          items:
            type: object
          nullable: true
          type: array
        hasOutputTimeInterval:
          items:
            $ref: '#/components/schemas/TimeInterval'
          nullable: true
          type: array
        hasInput:
          items:
            type: object
          nullable: true
          type: array
      required:
      - id
      type: object
    SpatiallyDistributedGrid:
      example:
        hasShape:
        - hasShape
        - hasShape
        hasDimension:
        - hasDimension
        - hasDimension
        id:
        - id
        - id
        label:
        - label
        - label
        type:
        - type
        - type
        hasSpatialResolution:
        - hasSpatialResolution
        - hasSpatialResolution
        hasCoordinateSystem:
        - hasCoordinateSystem
        - hasCoordinateSystem
      properties:
        hasShape:
          items:
            type: string
          nullable: true
          type: array
        hasDimension:
          items:
            type: string
          nullable: true
          type: array
        id:
          items:
            type: string
          nullable: false
          type: array
        label:
          items:
            type: string
          nullable: true
          type: array
        type:
          items:
            type: string
          nullable: true
          type: array
        hasSpatialResolution:
          items:
            type: string
          nullable: true
          type: array
        hasCoordinateSystem:
          items:
            type: string
          nullable: true
          type: array
      required:
      - id
      type: object
