{
    "@context": {
        "qudt": "http://qudt.org/schema/qudt",
        "owl": "http://www.w3.org/2002/07/owl",
        "xsd": "http://www.w3.org/2001/XMLSchema",
        "rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns",
        "purl": "http://purl.org/dc/terms/",
        "mc": "https://w3id.org/mint/modelCatalog#",
        "wingsexport": "https://w3id.org/wings/export/",
        "label": "rdf:label",
        "description": "purl:description",
        "cag": "mc:hasCAG",
        "inputs": "mc:hasInput",
        "outputs": "mc:hasOutput",
        "process": "mc:hasProcess",
        "intervaltime": "mc:hasTimeInterval",
        "implementationScriptLocation": "mc:hasImplementationScriptLocation",
        "container": "mc:hasContainer",
        "constrainT": "mc:hasConstraint",
        "parameters": "mc:hasParameter",
        "componentLocation": "mc:hasComponentLocation"
    },
    
    "@id": "economic",
    "uri": "economic",
    "@type": ["mc:ModelConfiguration"],
    "label": "Economic aggregate crop supply",
    "inputs": [
        {
            "@id": "econ_yield"
        }
    ],
    "outputs": [
        {
            "@id": "econ_land_use"
        }
    ],
    "description": "Aggregate crop supply response model for the country of South Sudan configuration",
    "cag": [
        {
            "@id": "economic_aggregate_crop_supply_CAG_variables"
        },
        {
            "@id": "economic_aggregate_crop_supply_CAG_process"
        }        
    ],
    "process": [
        {
            "@id": "crop_yield"
        },
        {
            "@id": "crop_supply"
        }        
    ],
    "intervalTime": [
        {
            "@id": "economic_aggregate_crop_supply_TI"
        }
    ],
    "implementationScriptLocation": "https://raw.githubusercontent.com/KnowledgeCaptureAndDiscovery/MINT-WorkflowDomain/master/WINGSWorkflowComponents/economic/run",
    "container": "https://w3id.org/mint/instance/mintproject/economic:latest",
    "constrainT": "[ backwardPIHMInputsDataHaveSameRegion: (?c rdf:type acdom:pihmClass) (?c ac:hasInput ?in1) (?c ac:hasInput ?in2) noValue(?in1 dcdom:region) noValue(?in2 dcdom:region) uriConcat(?c '_region' ?location) -> (?in1 dcdom:region ?location) (?in2 dcdom:region ?location) print('Setting domain of ?in1 and ?in2 to ?location because both inputs to PIHM should be from the same region')]",
    "parameters": [
        {
            "@id": "pihm_start-date"
        },
        {
            "@id": "pihm_end-date"
        }        
    ],
    "componentLocation": "https://github.com/KnowledgeCaptureAndDiscovery/MINT-WorkflowDomain/raw/master/WINGSWorkflowComponents/economic/economic.zip"
}