# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class CAG(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uri=None, type=None, parts=None, label=None):  # noqa: E501
        """CAG - a model defined in OpenAPI

        :param uri: The uri of this CAG.  # noqa: E501
        :type uri: str
        :param type: The type of this CAG.  # noqa: E501
        :type type: List[str]
        :param parts: The parts of this CAG.  # noqa: E501
        :type parts: List[Parameter]
        :param label: The label of this CAG.  # noqa: E501
        :type label: str
        """
        self.openapi_types = {
            'uri': str,
            'type': List[str],
            'parts': List[Parameter],
            'label': str
        }

        self.attribute_map = {
            'uri': 'uri',
            'type': 'type',
            'parts': 'parts',
            'label': 'label'
        }

        self._uri = uri
        self._type = type
        self._parts = parts
        self._label = label

    @classmethod
    def from_dict(cls, dikt) -> 'CAG':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CAG of this CAG.  # noqa: E501
        :rtype: CAG
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uri(self):
        """Gets the uri of this CAG.


        :return: The uri of this CAG.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this CAG.


        :param uri: The uri of this CAG.
        :type uri: str
        """

        self._uri = uri

    @property
    def type(self):
        """Gets the type of this CAG.


        :return: The type of this CAG.
        :rtype: List[str]
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CAG.


        :param type: The type of this CAG.
        :type type: List[str]
        """

        self._type = type

    @property
    def parts(self):
        """Gets the parts of this CAG.

        Array of Parameter or Variables  # noqa: E501

        :return: The parts of this CAG.
        :rtype: List[Parameter]
        """
        return self._parts

    @parts.setter
    def parts(self, parts):
        """Sets the parts of this CAG.

        Array of Parameter or Variables  # noqa: E501

        :param parts: The parts of this CAG.
        :type parts: List[Parameter]
        """

        self._parts = parts

    @property
    def label(self):
        """Gets the label of this CAG.


        :return: The label of this CAG.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this CAG.


        :param label: The label of this CAG.
        :type label: str
        """

        self._label = label
